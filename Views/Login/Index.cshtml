﻿@model TelerivetExample.Models.LoginModel

@{ Layout = null;
    ViewBag.Title = "Login";
    var returnUrl = TempData["ReturnUrl"] as string; }
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<style>
    body {
        background: #f5f5f5;
    }

    .login-container {
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    input {
        min-width: 250px;
    }

    .login-card {
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        border-radius: 5px;
        padding: 30px;
        background: white;
    }
    }
</style>
<div class="container login-container">
    <div class="row">
        <div class="col-xs-12 login-card">
            <h1>
                Telerivet Example
            </h1>
            @using (
            Html.BeginForm("Index", "Login", new { ReturnUrl = returnUrl }, FormMethod.Post, new { @style = "margin-top:-20px" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">
                            <strong>Error! &nbsp;</strong>@ViewBag.Message
                        </div>}
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2" })
                        <div class=" col-sm-6 col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2" })
                        <div class=" col-sm-6 col-md-6">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2" })
                        <div class="col-sm-6 col-md-6">
                            @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="login" id="Submit" class="btn btn-default" onclick="location.href='@Url.Action("Login", "Login")'" />
                            <div class="form-group hidden">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="login" class="btn btn-default btn-success" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>}
        </div>
    </div>
</div>
<script>
    $(document).ready(function (e) {
        $("#myModal").modal({ backdrop: 'static', keyboard: false })
    })</script>
